name: build

on: [push, pull_request]

jobs:
  build-bin-cross:
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-gnu
          - mips-unknown-linux-gnu

    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: show last commit
        run: |
          git show --summary

      - name: install rust toolchain
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: nightly

      - name: install docker
        run: |
          curl -fsSL https://get.docker.com | sudo bash

      - name: install deps
        # if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt update && sudo apt install make -y

      - name: install cross
        run: |
          cargo install cross

      - name: build
        run: |
          make ${{ matrix.target }}

      - name: rename and compress artifacts
        if: ${{ matrix.target == 'x86_64-pc-windows-gnu' }}
        run: |
          mv target/${{ matrix.target }}/release/leaf.exe leaf-${{ matrix.target }}.exe

      - name: rename and compress artifacts
        if: ${{ matrix.target != 'x86_64-pc-windows-gnu' }}
        run: |
          mv target/${{ matrix.target }}/release/leaf leaf-${{ matrix.target }}

      - name: upload assets
        if: ${{ matrix.target == 'x86_64-pc-windows-gnu' }}
        uses: actions/upload-artifact@v2
        with:
          name: leaf-${{ matrix.target }}.exe
          path: leaf-${{ matrix.target }}.exe

      - name: upload assets
        if: ${{ matrix.target != 'x86_64-pc-windows-gnu' }}
        uses: actions/upload-artifact@v2
        with:
          name: leaf-${{ matrix.target }}
          path: leaf-${{ matrix.target }}

          # build-bin-local:
          #   strategy:
          #     matrix:
          #       os: [macos-latest, ubuntu-latest]
          #       include:
          #         - os: macos-latest
          #           target: x86_64-apple-darwin
          #         - os: ubuntu-latest
          #           target: x86_64-unknown-linux-gnu

          #   runs-on: ${{ matrix.os }}

          #   steps:
          #     - name: checkout
          #       uses: actions/checkout@v2
          #       with:
          #         submodules: true

          #         #      - name: update submodule
          #         #        run: |
          #         #          git submodule init && git submodule update

          #     - name: show last commit
          #       run: |
          #         git show --summary

          #     - name: install rust toolchain
          #       uses: hecrj/setup-rust-action@v1
          #       with:
          #         rust-version: nightly

          #     - name: install llvm
          #       if: ${{ matrix.os == 'macos-latest' }}
          #       run: |
          #         brew update && brew install llvm protobuf upx

          #     - name: install llvm
          #       if: ${{ matrix.os == 'ubuntu-latest' }}
          #       run: |
          #         sudo apt update && sudo apt install llvm-dev libclang-dev clang libssl-dev pkg-config protobuf-compiler upx -y

          #     - name: build
          #       run: |
          #         cargo build --release --target ${{ matrix.target }} -p leaf-bin

          #     - name: rename and compress artifacts
          #       run: |
          #         mv target/${{ matrix.target }}/release/leaf leaf-${{ matrix.target }}
          #         #          upx --brute leaf-${{ matrix.target }}

          #     - name: upload assets
          #       uses: actions/upload-artifact@v2
          #       with:
          #         name: leaf-${{ matrix.target }}
          #         path: leaf-${{ matrix.target }}

          # build-lib-ios:
          #   runs-on: macos-latest

          #   steps:
          #     - name: checkout
          #       uses: actions/checkout@v2
          #       with:
          #         submodules: true

          #         #      - name: update submodule
          #         #        run: |
          #         #          git submodule init && git submodule update

          #     - name: show last commit
          #       run: |
          #         git show --summary

          #     - name: show xcode
          #       run: |
          #         xcodebuild -version
          #         xcrun --sdk iphoneos --show-sdk-path

          #         #      - name: build openssl
          #         #        run: |
          #         #          ./misc/build_ios_openssl.sh

          #     - name: install rust
          #       uses: hecrj/setup-rust-action@v1
          #       with:
          #         rust-version: nightly

          #     - name: install toolchain
          #       run: |
          #         rustup target add aarch64-apple-ios
          #         cargo install cargo-lipo
          #         cargo install cbindgen
          #         brew update && brew install llvm unzip protobuf

          #     - name: build
          #       run: |
          #         # OPENSSL_DIR=/tmp/openssl-ios64 cargo lipo --release -p leaf-mobile --targets aarch64-apple-ios
          #         cargo lipo --release -p leaf-mobile --targets aarch64-apple-ios

          #     - name: generate header
          #       run: |
          #         cbindgen leaf-mobile/src/lib.rs -l c > leaf.h

          #     - name: zip artifacts
          #       run: |
          #         mv target/universal/release/libleaf.a .
          #         zip libleaf-ios.zip leaf.h libleaf.a

          #     - name: verify zip artifacts
          #       run: |
          #         unzip -l libleaf-ios.zip

          #     - name: upload assets
          #       uses: actions/upload-artifact@v2
          #       with:
          #         name: libleaf-ios.zip
          #         path: libleaf-ios.zip
